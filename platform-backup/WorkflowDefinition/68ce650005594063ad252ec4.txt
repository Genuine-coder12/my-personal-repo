{
	"appsUsed":[
		"gsheets"
	],
	"createdTime":1758356736106,
	"deleted":false,
	"edges":[
		{
			"fromNodeId":"n_oAuRR",
			"priority":0,
			"skip":false,
			"toNodeId":"n_lLoVz",
			"type":"next"
		},
		{
			"fromNodeId":"n_lLoVz",
			"priority":0,
			"skip":false,
			"toNodeId":"n_DtoHr",
			"type":"next"
		},
		{
			"fromNodeId":"n_DtoHr",
			"priority":0,
			"skip":false,
			"toNodeId":"n_Xl2Ez",
			"type":"next"
		}
	],
	"id":"68ce650005594063ad252ec4",
	"lastModifiedBy":76193,
	"lcName":"virtusa | slack update [dnd]",
	"modifiedTime":1758358400629,
	"name":"Virtusa | Slack Update [DND]",
	"nodes":[
		{
			"context":{
				"appName":"schedule",
				"resourceVersion":807,
				"resourceName":"schedule_default"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_GiVOu-1",
			"id":"n_oAuRR",
			"index":1,
			"inputs":{
				"cron":"INTERVAL",
				"sequential":false,
				"timezone":"Asia/Calcutta",
				"interval":1,
				"frequency":"DAYS",
				"triggerAt":"10:00:00"
			},
			"skip":false,
			"subTitle":"Schedule",
			"title":"New recurring event",
			"trigger":{
				"type":"SCHEDULED"
			},
			"type":"START"
		},
		{
			"context":{
				"appName":"gsheets",
				"resourceVersion":6024,
				"connectionId":"68ce657bb270492a09944d6c",
				"resourceName":"gsheets_get_rows_batch",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_GiVOu-1",
			"id":"n_lLoVz",
			"index":2,
			"inputs":{
				"sheetName":"Tracker",
				"valueRenderOption":"UNFORMATTED_VALUE",
				"objectSourceResourceName":"gsheets_fetch_columns",
				"range":"2:200",
				"spreadsheetId":"1ipc0Vk8lQWP-8G8gQ1VaZ6hpQRNqlixXwB0EFcah-Vs__Virtusa | Tasks Tracker",
				"googleDrive":"0AO8lpMZP6rz5Uk9PVA"
			},
			"skip":false,
			"subTitle":"Google Sheets",
			"title":"Get rows",
			"type":"ACTION"
		},
		{
			"context":{
				"appName":"utility_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"utility_by_unifyapps_filter_list",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_GiVOu-1",
			"id":"n_DtoHr",
			"index":3,
			"inputs":{
				"filter":{
					"filters":[
						{
							"property":"{{ n_lLoVz.outputs.rows[0].Category__3 }}",
							"filter":{
								"operator":"EQUAL",
								"value":"UI"
							}
						}
					],
					"operator":"AND"
				},
				"listSource":"{{ n_lLoVz.outputs.rows }}"
			},
			"skip":false,
			"subTitle":"Utility by UnifyApps",
			"title":"Filter List of Data",
			"type":"ACTION"
		},
		{
			"additional":{
				"xsdSchemaConfig":{
					"root":{}
				},
				"visibleOptionalFields":[
					"root.parameters.rows.items.Cust_ETA__Delivery_Date__1",
					"root.parameters.rows.items.Item__2",
					"root.parameters.rows.items.Item_Priority__4",
					"root.parameters.rows.items.Current_Status__5",
					"root.parameters.rows.items.Dev_Owner__6",
					"root.parameters.rows.items.At_Risk___12",
					"root.parameters.rows.items.Comments__if_any___14",
					"root.parameters.rows.items.Monday_Ticket_with_Details__Optional___16",
					"root.parameters.rows.source",
					"root.parameters.rows.ua:type",
					"root.parameters.rows.items.Cust_ETA__Delivery_Date__1",
					"root.parameters.rows.items.Item__2",
					"root.parameters.rows.items.Item_Priority__4",
					"root.parameters.rows.items.Current_Status__5",
					"root.parameters.rows.items.Dev_Owner__6",
					"root.parameters.rows.items.At_Risk___12",
					"root.parameters.rows.items.Comments__if_any___14",
					"root.parameters.rows.items.Monday_Ticket_with_Details__Optional___16"
				]
			},
			"context":{
				"appName":"code_by_unifyapps",
				"resourceVersion":0,
				"resourceName":"code_by_unifyapps_groovy",
				"type":"APPLICATION"
			},
			"debug":false,
			"dirty":true,
			"fallbackMode":"STOP",
			"groupId":"_GiVOu-1",
			"id":"n_Xl2Ez",
			"index":4,
			"inputs":{
				"input":{
					"type":"object",
					"additionalProperties":false,
					"properties":{
						"rows":{
							"type":"array",
							"items":{
								"type":"object",
								"properties":{
									"Cust_ETA__Delivery_Date__1":{
										"type":"string",
										"title":"Cust_ETA__Delivery_Date__1"
									},
									"Item__2":{
										"type":"string",
										"title":"Item__2"
									},
									"Item_Priority__4":{
										"type":"string",
										"title":"Item_Priority__4"
									},
									"Current_Status__5":{
										"type":"string",
										"title":"Current_Status__5"
									},
									"Dev_Owner__6":{
										"type":"string",
										"title":"Dev_Owner__6"
									},
									"At_Risk___12":{
										"type":"string",
										"title":"At_Risk___12"
									},
									"Comments__if_any___14":{
										"type":"string",
										"title":"Comments__if_any___14"
									},
									"Monday_Ticket_with_Details__Optional___16":{
										"type":"string",
										"title":"Monday_Ticket_with_Details__Optional___16"
									},
									"App":{
										"type":"string",
										"title":"App"
									}
								},
								"additionalProperties":false,
								"required":[
									"App"
								]
							},
							"title":"rows"
						}
					}
				},
				"code":"def inputVar = binding.variables[\"rows\"]   // Expecting Map with rows[] or a List of row Maps\nif (!inputVar) {\n    return [\"slack_text\": \"No rows found.\"]\n}\n\n// Normalize to rows list\nList rows\nif (inputVar instanceof Map && inputVar.containsKey(\"rows\")) {\n    rows = (inputVar.rows ?: []) as List\n} else if (inputVar instanceof List) {\n    rows = inputVar as List\n} else {\n    rows = []\n}\nif (!rows || rows.isEmpty()) {\n    return [\"slack_text\": \"No rows found.\"]\n}\n\n// App label mapping + ordering\ndef appLabelMap = [\n    \"Commercial Meeting Tracker\": \"App 1\",\n    \"POC Application\"           : \"App 2\",\n    \"OTL Simplified\"            : \"App 3\",\n    \"Ratings Normalization\"     : \"App 4\",\n    \"All Apps\"                  : \"All Apps\"\n]\ndef appOrder = [\n    \"Commercial Meeting Tracker\",\n    \"POC Application\",\n    \"OTL Simplified\",\n    \"Ratings Normalization\",\n    \"All Apps\"\n]\n\n// Helper: embed item text with Monday link if it looks like a URL\nString maybeEmbed(String text, String link) {\n    def t = (text ?: \"\").trim()\n    def u = (link ?: \"\").trim()\n    if (u && u.toLowerCase().startsWith(\"http\")) {\n        return \"<${u}|${t}>\"\n    }\n    return t\n}\n\n// Build simple numbered lines\ndef lines = []\nint idx = 1\n\nappOrder.each { appName ->\n    rows.findAll { (it.App ?: \"\").toString().trim() == appName }.each { r ->\n        def alertPrefix = ((r.At_Risk___12 ?: \"\").toString().trim().equalsIgnoreCase(\"Yes\")) ? \":alert: \" : \"\"\n        def appLabel    = appLabelMap[appName] ?: appName\n        def itemText    = maybeEmbed(r.Item__2, r.Monday_Ticket_with_Details__Optional___16)\n        def status      = (r.Current_Status__5 ?: \"\").toString().trim()\n        def statusDisp  = status ? \":red_circle: [${status}]\" : \"\"\n        def owner       = (r.Dev_Owner__6 ?: \"\").toString().trim()\n        def ownerDisp   = owner ? \" @${owner}\" : \"\"\n        def comments    = (r.Comments__if_any___14 ?: \"\").toString().trim()\n        def commentsDisp= comments ? \" ${comments}\" : \"\"\n\n        lines << \"${idx}. ${alertPrefix}${appLabel}: ${itemText} ${statusDisp}${ownerDisp}${commentsDisp}\".trim()\n        idx++\n    }\n}\n\nif (lines.isEmpty()) {\n    return [\"slack_text\": \"No actionable updates.\"]\n}\n\nreturn [\"slack_text\": lines.join('\\n')]\n",
				"compile_static":false,
				"captureStdOutput":false,
				"parameters":{
					"rows":{
						"ua:type":"mappedArray",
						"items":{
							"App":"{{ n_DtoHr.outputs.filteredList[0].Track__0 }}",
							"Cust_ETA__Delivery_Date__1":"{{ n_DtoHr.outputs.filteredList[0].Cust_ETA__Delivery_Date__1 }}",
							"Item__2":"{{ n_DtoHr.outputs.filteredList[0].Item__2 }}",
							"Item_Priority__4":"{{ n_DtoHr.outputs.filteredList[0].Item_Priority__4 }}",
							"Current_Status__5":"{{ n_DtoHr.outputs.filteredList[0].Current_Status__5 }}",
							"Dev_Owner__6":"{{ n_DtoHr.outputs.filteredList[0].Dev_Owner__6 }}",
							"At_Risk___12":"{{ n_DtoHr.outputs.filteredList[0].At_Risk___12 }}",
							"Comments__if_any___14":"{{ n_DtoHr.outputs.filteredList[0].Comments__if_any___14 }}",
							"Monday_Ticket_with_Details__Optional___16":"{{ n_DtoHr.outputs.filteredList[0].Monday_Ticket_with_Details__Optional___16 }}"
						},
						"source":"{{ n_DtoHr.outputs.filteredList }}"
					}
				}
			},
			"skip":false,
			"subTitle":"Code by UnifyApps",
			"title":"Execute Groovy code",
			"type":"ACTION"
		}
	],
	"ownerUserId":76193,
	"schemaReferences":[
		
	],
	"settings":{
		"enableNodeLevelLogging":true,
		"enableRunLogging":true,
		"enableVariableLogging":true,
		"route":{
			"default":false,
			"tierName":"global"
		}
	},
	"standard":false,
	"tags":[
		
	],
	"version":6
}